% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_observations.R
\name{get_observations}
\alias{get_observations}
\title{Get data from a SDMX API}
\usage{
get_observations(
  agencyID,
  id,
  version = "latest",
  flowRef = NULL,
  startPeriod = NULL,
  endPeriod = NULL,
  filter_on = NULL,
  ...,
  as.data.table = FALSE,
  dim_contents = c("label", "both", "id"),
  attributes_contents = c("label", "id", "both"),
  obs_value_numeric = TRUE,
  raw = FALSE,
  drop_first_column = !raw,
  cache_dir = tempdir(),
  verbose = getOption("cbsopendata.verbose", FALSE)
)
}
\arguments{
\item{agencyID}{The agency ID}

\item{id}{The id of the dataflow}

\item{version}{The version of the dataflow}

\item{flowRef}{The flow reference can be used in stead of agencyID, id and version}

\item{startPeriod}{The start period for which the data should be returned}

\item{endPeriod}{The end period for which the data should be returned}

\item{filter_on}{A named list of filters to apply to the data, if not speficied, it is the default selection, set to NULL to select all.}

\item{...}{Additional parameters to pass to the request}

\item{as.data.table}{If \code{TRUE} return a \code{\link[=data.table]{data.table()}}, otherwise a \code{\link[=data.frame]{data.frame()}}}

\item{dim_contents}{The contents of the dimension columns, either "label", "id" or "both"}

\item{attributes_contents}{The contents of the attribute columns, either "label", "id" or "both"}

\item{obs_value_numeric}{Should the OBS_VALUE column be coerced to numeric? Default is \code{TRUE}}

\item{raw}{If \code{TRUE} return the raw data.frame from the SDMX, otherwise the data.frame is processed}

\item{drop_first_column}{Should the first column be dropped? Default is \code{TRUE} (if not raw)}

\item{cache_dir}{The directory to cache the meta data, set to \code{NULL} to disable caching}

\item{verbose}{if \code{TRUE} print information about the caching.}
}
\value{
\code{\link[=data.frame]{data.frame()}} or \code{\link[data.table:data.table]{data.table::data.table()}} depending on \code{as.data.table}
}
\description{
Get data from a SDMX API
}
\examples{
if (interactive()) {

  dfs <- get_dataflows()
  flowRef <- dfs$flowRef[4]

  obs <- get_observations(
    flowRef = flowRef,
    filter_on = list(
      "RegioS" = c("NL01"),
      "Perioden" = c("2024MM01")
    )
  )

  obs
}
}
